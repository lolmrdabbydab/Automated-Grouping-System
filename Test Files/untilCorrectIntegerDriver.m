clear; clc;

% -= Test Functionality =- (No Parameters)
disp('Parameters: ()');
disp('Input: "3"');
fprintf(['Expected Output: \n\t' ...
    '- Input Prompt: "Enter a real, whole number larger than 1: "\n\t' ...
    '- userInput: "3"\n']);
num = untilCorrectInteger();
fprintf("Actual Output: %d\n\n", num);

% -= Test Functionality =- (Parameter, lowerBound, Invalid & Valid Input)
prompt = "Enter a Number: ";
lowerBound = 3;
fprintf('Parameters: ("%s", %d)\n', prompt, lowerBound);
fprintf(['Input: \n\t' ...
    '- 1st Time: 2\n\t' ...
    '- 2nd Time: 3.5\n\t' ...
    '- 3rd Time: 5i\n\t' ...
    '- 4th Time: 5 6\n\t' ...
    '- 5th Time: "a"\n\t' ...
    '- 6th Time: 5\n\t']);
fprintf(['Expected Output: \n\t' ...
    '- Input Prompt: "Enter a Number: "\n\t' ...
    '- Warning Message that input should be a real whole number larger than 2\n\t' ...
    '- Warning Message that input should be a real whole number larger than 2\n\t' ...
    '- Warning Message that input should be a real whole number larger than 2\n\t' ...
    '- Warning Message that input should be a real whole number larger than 2\n\t' ...
    '- Error\n\t' ...
    '- userInput: 5\n']);
num = untilCorrectInteger(prompt, lowerBound);
fprintf("Actual Output: %d\n", num);
