clear; clc;

eventName = "Easter";

% -= Test Case 1 =- (Both, Same Name in Combine & Separate)
disp('Input: on off ' + ...
    '3 2 ' + ...
    'john mike cindy luke rick ken ' + ...
    'both ' + ...
    'john john mike' + ...
    'new ' + ...
    'cindy john' + ...
    'none ' + ...
    'luke ken luke ' + ...
    'none ');
fprintf('Expected Output: \n' + ...
    '- 2 Initial Input Prompt\n' + ...
    '- essentialGroupInput()\n' + ...
    '- Com/Sep Input Instruction\n' + ...
    '- Input Prompt To Choose Combine/Separate/Both\n' + ...
    '- -= Combination List =-\n' + ...
    '- Name Already Entered warning message\n' + ...
    '- -= Separation List =-\n' + ...
    '- Name Already Entered warning message\n' + ...
    '- useExportCSV = Off\n' + ...
    '- groupTable = Matrix of zeros with dimension [indPerGroup, groupNum]\n' + ...
    '- combineMatrix: ["John" "Mike"]\n' + ...
    '- separateMatrix: ["Luke" "Ken"]\n');
disp("Actual Output:");
[groupTable, useExportCSV] = advance4(eventName);
fprintf("useExportCSV: %s\n", useExportCSV);
disp(groupTable);

pauser = input("Press Enter To Continue");
clc;

% -= Test Case 2 =- (Separate, Input per individual > Number of Groups - 1)
disp('Input: on off ' + ...
    '3 2 ' + ...
    'john mike cindy luke rick ken ' + ...
    'separate ' + ...
    'john cindy ' + ...
    'new ' + ...
    'john mike ' + ...
    'new ' + ...
    'john ' + ...
    'none');
fprintf('Expected Output: \n' + ...
    '- 2 Initial Input Prompt\n' + ...
    '- essentialGroupInput()\n' + ...
    '- Com/Sep Input Instruction\n' + ...
    '- Input Prompt To Choose Combine/Separate/Both\n' + ...
    '- -= Separation List =-\n' + ...
    '- Input per individual cap reached, John can only be inputted 2 times warning message\n' + ...
    '- useExportCSV = Off\n' + ...
    '- groupTable = Matrix of zeros with dimension [indPerGroup, groupNum]\n' + ...
    '- Empty combineMatrix\n' + ...
    '- separateMatrix: ["John" "Cindy"; "John" "Mike"]\n');
disp("Actual Output:");
[groupTable, useExportCSV] = advance4(eventName);
fprintf("useExportCSV: %s\n", useExportCSV);
disp(groupTable);

pauser = input("Press Enter To Continue");
clc;

% -= Test Case 3 =- (Separate, Number Of Teams > Number of Groups)
disp('Input: on off ' + ...
    '3 2 ' + ...
    'john mike cindy luke rick ken ' + ...
    'separate ' + ...
    'john cindy ' + ...
    'new ' + ...
    'cindy mike ' + ...
    'new ' + ...
    'luke rick ' + ...
    'new ' + ...
    'none ');
fprintf('Expected Output: \n' + ...
    '- 2 Initial Input Prompt\n' + ...
    '- essentialGroupInput()\n' + ...
    '- Com/Sep Input Instruction\n' + ...
    '- Input Prompt To Choose Combine/Separate/Both\n' + ...
    '- -= Separation List =-\n' + ...
    '- Separate Team cap reached, can only have 3 Separate Team warning message\n' + ...
    '- useExportCSV = Off\n' + ...
    '- groupTable = Matrix of zeros with dimension [indPerGroup, groupNum]\n' + ...
    '- Empty combineMatrix\n' + ...
    '- separateMatrix: ["John" "Cindy"; "Cindy" "Mike"; "Luke" "Rick"]\n');
disp("Actual Output:");
[groupTable, useExportCSV] = advance4(eventName);
fprintf("useExportCSV: %s\n", useExportCSV);
disp(groupTable);